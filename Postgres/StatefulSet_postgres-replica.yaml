apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-replica-gitlab
  namespace: gitlab
spec:
  serviceName: "postgres-replica"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      role: replica
  template:
    metadata:
      labels:
        app: postgres
        role: replica
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - postgres
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: postgres
        image: postgres:17.2
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: secret-for-postgres-gitlab
              key: db_username  
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-for-postgres-gitlab
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: secret-for-postgres-gitlab
              key: db_database
        - name: REPLICATION_MODE
          value: "replica"
        - name: MASTER_HOST
          value: "postgres-master"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "2"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        command:
        - "bash"
        - "-c"
        - |
          rm -rf /var/lib/postgresql/data/*
          until PGPASSWORD=$POSTGRES_PASSWORD pg_isready -U $POSTGRES_USER -d $POSTGRES_DB --host=$MASTER_HOST --port=5432; do
            echo "Waiting for master to be ready..."
            sleep 2
          done
          PGPASSWORD=$POSTGRES_PASSWORD pg_basebackup -h $MASTER_HOST -D /var/lib/postgresql/data -U $POSTGRES_USER -v -P --wal-method=stream
      
          chown -R postgres:postgres /var/lib/postgresql/data/
          PGPASSWORD=$POSTGRES_PASSWORD psql -h $MASTER_HOST -U $POSTGRES_USER -d $POSTGRES_DB -c "
          DO \$\$
          BEGIN
              IF NOT EXISTS (SELECT 1 FROM pg_replication_slots WHERE slot_name = 'replica1') THEN
                  PERFORM pg_create_physical_replication_slot('replica1');
              END IF;
          END
          \$\$;"
          PGPASSWORD=$POSTGRES_PASSWORD psql -h $MASTER_HOST  -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT pg_create_physical_replication_slot('replica1');"
          echo "primary_slot_name = 'replica1'" |  tee -a /var/lib/postgresql/data/postgresql.conf
          echo "primary_conninfo = 'host=$MASTER_HOST port=5432 user=$POSTGRES_USER password=$POSTGRES_PASSWORD application_name=replica1'" |  tee -a  /var/lib/postgresql/data//postgresql.conf
          touch /var/lib/postgresql/data/standby.signal
          chmod 700 /var/lib/postgresql/data/
          
          echo "Starting PostgreSQL..."
          postgres
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-replica-gitlab-pvc
      - name: postgres-config
        configMap:
          name: postgres-master-config